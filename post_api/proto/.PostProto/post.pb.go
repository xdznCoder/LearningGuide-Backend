// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.28.0
// source: post.proto

package __PostProto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CheckNoticeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewNotices    bool                   `protobuf:"varint,1,opt,name=NewNotices,proto3" json:"NewNotices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckNoticeResponse) Reset() {
	*x = CheckNoticeResponse{}
	mi := &file_post_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckNoticeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckNoticeResponse) ProtoMessage() {}

func (x *CheckNoticeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckNoticeResponse.ProtoReflect.Descriptor instead.
func (*CheckNoticeResponse) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{0}
}

func (x *CheckNoticeResponse) GetNewNotices() bool {
	if x != nil {
		return x.NewNotices
	}
	return false
}

type CheckNoticeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckNoticeRequest) Reset() {
	*x = CheckNoticeRequest{}
	mi := &file_post_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckNoticeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckNoticeRequest) ProtoMessage() {}

func (x *CheckNoticeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckNoticeRequest.ProtoReflect.Descriptor instead.
func (*CheckNoticeRequest) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{1}
}

func (x *CheckNoticeRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type NoticeFilterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Type          int32                  `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	PageNum       int32                  `protobuf:"varint,4,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoticeFilterRequest) Reset() {
	*x = NoticeFilterRequest{}
	mi := &file_post_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoticeFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeFilterRequest) ProtoMessage() {}

func (x *NoticeFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeFilterRequest.ProtoReflect.Descriptor instead.
func (*NoticeFilterRequest) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{2}
}

func (x *NoticeFilterRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *NoticeFilterRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NoticeFilterRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *NoticeFilterRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type NoticeInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UserId        int32                  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	OwnerId       int32                  `protobuf:"varint,3,opt,name=OwnerId,proto3" json:"OwnerId,omitempty"`
	Type          int32                  `protobuf:"varint,4,opt,name=Type,proto3" json:"Type,omitempty"`
	PostId        int32                  `protobuf:"varint,5,opt,name=PostId,proto3" json:"PostId,omitempty"`
	PostTitle     string                 `protobuf:"bytes,6,opt,name=PostTitle,proto3" json:"PostTitle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoticeInfoResponse) Reset() {
	*x = NoticeInfoResponse{}
	mi := &file_post_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoticeInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeInfoResponse) ProtoMessage() {}

func (x *NoticeInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeInfoResponse.ProtoReflect.Descriptor instead.
func (*NoticeInfoResponse) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{3}
}

func (x *NoticeInfoResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NoticeInfoResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *NoticeInfoResponse) GetOwnerId() int32 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *NoticeInfoResponse) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NoticeInfoResponse) GetPostId() int32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *NoticeInfoResponse) GetPostTitle() string {
	if x != nil {
		return x.PostTitle
	}
	return ""
}

type NoticeListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data          []*NoticeInfoResponse  `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoticeListResponse) Reset() {
	*x = NoticeListResponse{}
	mi := &file_post_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoticeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeListResponse) ProtoMessage() {}

func (x *NoticeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeListResponse.ProtoReflect.Descriptor instead.
func (*NoticeListResponse) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{4}
}

func (x *NoticeListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *NoticeListResponse) GetData() []*NoticeInfoResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentRequest) Reset() {
	*x = DeleteCommentRequest{}
	mi := &file_post_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRequest) ProtoMessage() {}

func (x *DeleteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteCommentRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CommentListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`
	Data          []*CommentInfoResponse `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentListResponse) Reset() {
	*x = CommentListResponse{}
	mi := &file_post_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentListResponse) ProtoMessage() {}

func (x *CommentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentListResponse.ProtoReflect.Descriptor instead.
func (*CommentListResponse) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{6}
}

func (x *CommentListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CommentListResponse) GetData() []*CommentInfoResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type CommentInfoResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserId          int32                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PostId          int32                  `protobuf:"varint,2,opt,name=PostId,proto3" json:"PostId,omitempty"`
	ParentCommentId int32                  `protobuf:"varint,3,opt,name=ParentCommentId,proto3" json:"ParentCommentId,omitempty"`
	Content         string                 `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`
	Id              int32                  `protobuf:"varint,5,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CommentInfoResponse) Reset() {
	*x = CommentInfoResponse{}
	mi := &file_post_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentInfoResponse) ProtoMessage() {}

func (x *CommentInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentInfoResponse.ProtoReflect.Descriptor instead.
func (*CommentInfoResponse) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{7}
}

func (x *CommentInfoResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CommentInfoResponse) GetPostId() int32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *CommentInfoResponse) GetParentCommentId() int32 {
	if x != nil {
		return x.ParentCommentId
	}
	return 0
}

func (x *CommentInfoResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CommentInfoResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CommentFilterRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserId          int32                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PostId          int32                  `protobuf:"varint,2,opt,name=PostId,proto3" json:"PostId,omitempty"`
	ParentCommendId int32                  `protobuf:"varint,3,opt,name=ParentCommendId,proto3" json:"ParentCommendId,omitempty"`
	PageNum         int32                  `protobuf:"varint,4,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
	PageSize        int32                  `protobuf:"varint,5,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CommentFilterRequest) Reset() {
	*x = CommentFilterRequest{}
	mi := &file_post_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentFilterRequest) ProtoMessage() {}

func (x *CommentFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentFilterRequest.ProtoReflect.Descriptor instead.
func (*CommentFilterRequest) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{8}
}

func (x *CommentFilterRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CommentFilterRequest) GetPostId() int32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *CommentFilterRequest) GetParentCommendId() int32 {
	if x != nil {
		return x.ParentCommendId
	}
	return 0
}

func (x *CommentFilterRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *CommentFilterRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type NewCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewCommentResponse) Reset() {
	*x = NewCommentResponse{}
	mi := &file_post_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewCommentResponse) ProtoMessage() {}

func (x *NewCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewCommentResponse.ProtoReflect.Descriptor instead.
func (*NewCommentResponse) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{9}
}

func (x *NewCommentResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type NewCommentRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserId          int32                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PostId          int32                  `protobuf:"varint,2,opt,name=PostId,proto3" json:"PostId,omitempty"`
	ParentCommentId int32                  `protobuf:"varint,3,opt,name=ParentCommentId,proto3" json:"ParentCommentId,omitempty"`
	Content         string                 `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NewCommentRequest) Reset() {
	*x = NewCommentRequest{}
	mi := &file_post_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewCommentRequest) ProtoMessage() {}

func (x *NewCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewCommentRequest.ProtoReflect.Descriptor instead.
func (*NewCommentRequest) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{10}
}

func (x *NewCommentRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *NewCommentRequest) GetPostId() int32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *NewCommentRequest) GetParentCommentId() int32 {
	if x != nil {
		return x.ParentCommentId
	}
	return 0
}

func (x *NewCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type DeleteFavRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PostId        int32                  `protobuf:"varint,2,opt,name=PostId,proto3" json:"PostId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFavRequest) Reset() {
	*x = DeleteFavRequest{}
	mi := &file_post_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFavRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFavRequest) ProtoMessage() {}

func (x *DeleteFavRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFavRequest.ProtoReflect.Descriptor instead.
func (*DeleteFavRequest) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteFavRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteFavRequest) GetPostId() int32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type FavListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PageNum       int32                  `protobuf:"varint,2,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FavListRequest) Reset() {
	*x = FavListRequest{}
	mi := &file_post_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FavListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavListRequest) ProtoMessage() {}

func (x *FavListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavListRequest.ProtoReflect.Descriptor instead.
func (*FavListRequest) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{12}
}

func (x *FavListRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FavListRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *FavListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type NewFavRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PostId        int32                  `protobuf:"varint,2,opt,name=PostId,proto3" json:"PostId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewFavRequest) Reset() {
	*x = NewFavRequest{}
	mi := &file_post_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewFavRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewFavRequest) ProtoMessage() {}

func (x *NewFavRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewFavRequest.ProtoReflect.Descriptor instead.
func (*NewFavRequest) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{13}
}

func (x *NewFavRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *NewFavRequest) GetPostId() int32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type DeleteLikeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PostId        int32                  `protobuf:"varint,2,opt,name=PostId,proto3" json:"PostId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLikeRequest) Reset() {
	*x = DeleteLikeRequest{}
	mi := &file_post_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLikeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLikeRequest) ProtoMessage() {}

func (x *DeleteLikeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLikeRequest.ProtoReflect.Descriptor instead.
func (*DeleteLikeRequest) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteLikeRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteLikeRequest) GetPostId() int32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type LikeListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PageNum       int32                  `protobuf:"varint,2,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeListRequest) Reset() {
	*x = LikeListRequest{}
	mi := &file_post_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeListRequest) ProtoMessage() {}

func (x *LikeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeListRequest.ProtoReflect.Descriptor instead.
func (*LikeListRequest) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{15}
}

func (x *LikeListRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LikeListRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *LikeListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type NewLikeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewLikeResponse) Reset() {
	*x = NewLikeResponse{}
	mi := &file_post_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewLikeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewLikeResponse) ProtoMessage() {}

func (x *NewLikeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewLikeResponse.ProtoReflect.Descriptor instead.
func (*NewLikeResponse) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{16}
}

func (x *NewLikeResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type NewLikeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        int32                  `protobuf:"varint,1,opt,name=PostId,proto3" json:"PostId,omitempty"`
	UserId        int32                  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewLikeRequest) Reset() {
	*x = NewLikeRequest{}
	mi := &file_post_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewLikeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewLikeRequest) ProtoMessage() {}

func (x *NewLikeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewLikeRequest.ProtoReflect.Descriptor instead.
func (*NewLikeRequest) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{17}
}

func (x *NewLikeRequest) GetPostId() int32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *NewLikeRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DeletePostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePostRequest) Reset() {
	*x = DeletePostRequest{}
	mi := &file_post_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePostRequest) ProtoMessage() {}

func (x *DeletePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePostRequest.ProtoReflect.Descriptor instead.
func (*DeletePostRequest) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{18}
}

func (x *DeletePostRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdatePostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Desc          string                 `protobuf:"bytes,4,opt,name=Desc,proto3" json:"Desc,omitempty"`
	Image         string                 `protobuf:"bytes,5,opt,name=Image,proto3" json:"Image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePostRequest) Reset() {
	*x = UpdatePostRequest{}
	mi := &file_post_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePostRequest) ProtoMessage() {}

func (x *UpdatePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePostRequest.ProtoReflect.Descriptor instead.
func (*UpdatePostRequest) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{19}
}

func (x *UpdatePostRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePostRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdatePostRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdatePostRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *UpdatePostRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type PostListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`
	Data          []*PostItemResponse    `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostListResponse) Reset() {
	*x = PostListResponse{}
	mi := &file_post_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostListResponse) ProtoMessage() {}

func (x *PostListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostListResponse.ProtoReflect.Descriptor instead.
func (*PostListResponse) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{20}
}

func (x *PostListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PostListResponse) GetData() []*PostItemResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type PostItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Category      string                 `protobuf:"bytes,2,opt,name=Category,proto3" json:"Category,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Desc          string                 `protobuf:"bytes,4,opt,name=Desc,proto3" json:"Desc,omitempty"`
	Image         string                 `protobuf:"bytes,5,opt,name=Image,proto3" json:"Image,omitempty"`
	Id            int32                  `protobuf:"varint,6,opt,name=Id,proto3" json:"Id,omitempty"`
	LikeNum       int32                  `protobuf:"varint,7,opt,name=LikeNum,proto3" json:"LikeNum,omitempty"`
	FavNum        int32                  `protobuf:"varint,8,opt,name=FavNum,proto3" json:"FavNum,omitempty"`
	CommentNum    int32                  `protobuf:"varint,9,opt,name=CommentNum,proto3" json:"CommentNum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostItemResponse) Reset() {
	*x = PostItemResponse{}
	mi := &file_post_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostItemResponse) ProtoMessage() {}

func (x *PostItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostItemResponse.ProtoReflect.Descriptor instead.
func (*PostItemResponse) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{21}
}

func (x *PostItemResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PostItemResponse) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *PostItemResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PostItemResponse) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *PostItemResponse) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *PostItemResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PostItemResponse) GetLikeNum() int32 {
	if x != nil {
		return x.LikeNum
	}
	return 0
}

func (x *PostItemResponse) GetFavNum() int32 {
	if x != nil {
		return x.FavNum
	}
	return 0
}

func (x *PostItemResponse) GetCommentNum() int32 {
	if x != nil {
		return x.CommentNum
	}
	return 0
}

type PostFilterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Category      []string               `protobuf:"bytes,3,rep,name=Category,proto3" json:"Category,omitempty"`
	PageNum       int32                  `protobuf:"varint,4,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
	PageSize      int32                  `protobuf:"varint,5,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostFilterRequest) Reset() {
	*x = PostFilterRequest{}
	mi := &file_post_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostFilterRequest) ProtoMessage() {}

func (x *PostFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostFilterRequest.ProtoReflect.Descriptor instead.
func (*PostFilterRequest) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{22}
}

func (x *PostFilterRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PostFilterRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PostFilterRequest) GetCategory() []string {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *PostFilterRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *PostFilterRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type PostInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Category      string                 `protobuf:"bytes,2,opt,name=Category,proto3" json:"Category,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	Title         string                 `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`
	Desc          string                 `protobuf:"bytes,5,opt,name=Desc,proto3" json:"Desc,omitempty"`
	Image         string                 `protobuf:"bytes,6,opt,name=Image,proto3" json:"Image,omitempty"`
	Id            int32                  `protobuf:"varint,7,opt,name=Id,proto3" json:"Id,omitempty"`
	LikeNum       int32                  `protobuf:"varint,8,opt,name=LikeNum,proto3" json:"LikeNum,omitempty"`
	FavNum        int32                  `protobuf:"varint,9,opt,name=FavNum,proto3" json:"FavNum,omitempty"`
	CommentNum    int32                  `protobuf:"varint,10,opt,name=CommentNum,proto3" json:"CommentNum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostInfoResponse) Reset() {
	*x = PostInfoResponse{}
	mi := &file_post_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostInfoResponse) ProtoMessage() {}

func (x *PostInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostInfoResponse.ProtoReflect.Descriptor instead.
func (*PostInfoResponse) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{23}
}

func (x *PostInfoResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PostInfoResponse) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *PostInfoResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PostInfoResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PostInfoResponse) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *PostInfoResponse) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *PostInfoResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PostInfoResponse) GetLikeNum() int32 {
	if x != nil {
		return x.LikeNum
	}
	return 0
}

func (x *PostInfoResponse) GetFavNum() int32 {
	if x != nil {
		return x.FavNum
	}
	return 0
}

func (x *PostInfoResponse) GetCommentNum() int32 {
	if x != nil {
		return x.CommentNum
	}
	return 0
}

type PostID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostID) Reset() {
	*x = PostID{}
	mi := &file_post_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostID) ProtoMessage() {}

func (x *PostID) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostID.ProtoReflect.Descriptor instead.
func (*PostID) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{24}
}

func (x *PostID) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type NewPostResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewPostResponse) Reset() {
	*x = NewPostResponse{}
	mi := &file_post_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewPostResponse) ProtoMessage() {}

func (x *NewPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewPostResponse.ProtoReflect.Descriptor instead.
func (*NewPostResponse) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{25}
}

func (x *NewPostResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type NewPostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Category      string                 `protobuf:"bytes,2,opt,name=Category,proto3" json:"Category,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	Title         string                 `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`
	Desc          string                 `protobuf:"bytes,5,opt,name=Desc,proto3" json:"Desc,omitempty"`
	Image         string                 `protobuf:"bytes,6,opt,name=Image,proto3" json:"Image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewPostRequest) Reset() {
	*x = NewPostRequest{}
	mi := &file_post_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewPostRequest) ProtoMessage() {}

func (x *NewPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewPostRequest.ProtoReflect.Descriptor instead.
func (*NewPostRequest) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{26}
}

func (x *NewPostRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *NewPostRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *NewPostRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NewPostRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NewPostRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *NewPostRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_post_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_post_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_post_proto_rawDescGZIP(), []int{27}
}

var File_post_proto protoreflect.FileDescriptor

var file_post_proto_rawDesc = string([]byte{
	0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x70, 0x6f,
	0x73, 0x74, 0x22, 0x35, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x65, 0x77,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x4e,
	0x65, 0x77, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x73, 0x22, 0x2c, 0x0a, 0x12, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x22, 0xa0, 0x01, 0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x50,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0x58, 0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x6f, 0x73, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x26, 0x0a,
	0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x99, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0xa6, 0x01,
	0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a,
	0x11, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f,
	0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x42, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x61, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x0e, 0x46, 0x61,
	0x76, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x3f, 0x0a, 0x0d, 0x4e, 0x65,
	0x77, 0x46, 0x61, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x22, 0x5f, 0x0a, 0x0f, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x50,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x21, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x0e, 0x4e, 0x65, 0x77, 0x4c, 0x69, 0x6b, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x7d, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x44, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x54, 0x0a, 0x10, 0x50, 0x6f,
	0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xe8, 0x01, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44,
	0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x69, 0x6b,
	0x65, 0x4e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x4c, 0x69, 0x6b, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x61, 0x76, 0x4e, 0x75, 0x6d, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x46, 0x61, 0x76, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x22, 0x93, 0x01, 0x0a, 0x11,
	0x50, 0x6f, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x50,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x82, 0x02, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65,
	0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x14,
	0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x46, 0x61, 0x76, 0x4e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x46, 0x61, 0x76, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x4e, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x22, 0x18, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64,
	0x22, 0x21, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x49, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x0e, 0x4e, 0x65, 0x77, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65,
	0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x14,
	0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x9f, 0x07,
	0x0a, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x50, 0x6f, 0x73,
	0x74, 0x12, 0x14, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x4e,
	0x65, 0x77, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x0c, 0x2e, 0x70, 0x6f, 0x73, 0x74,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x1a, 0x16, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3b, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x6f,
	0x73, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x6f, 0x73,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x32, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x17,
	0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x4c, 0x69, 0x6b, 0x65, 0x12,
	0x14, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x3f, 0x0a, 0x0e, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x4c, 0x69, 0x6b, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x4c, 0x69, 0x6b, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x6f,
	0x73, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6b,
	0x65, 0x12, 0x17, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c,
	0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x6f, 0x73,
	0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2a, 0x0a, 0x06, 0x4e, 0x65, 0x77, 0x46, 0x61,
	0x76, 0x12, 0x13, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x46, 0x61, 0x76, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x3d, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x46, 0x61, 0x76, 0x12, 0x14, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x46, 0x61, 0x76, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x6f, 0x73,
	0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x76, 0x12,
	0x16, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x76,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x6f,
	0x73, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x70,
	0x6f, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x44, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x6f, 0x73,
	0x74, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x0c, 0x5a, 0x0a, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_post_proto_rawDescOnce sync.Once
	file_post_proto_rawDescData []byte
)

func file_post_proto_rawDescGZIP() []byte {
	file_post_proto_rawDescOnce.Do(func() {
		file_post_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_post_proto_rawDesc), len(file_post_proto_rawDesc)))
	})
	return file_post_proto_rawDescData
}

var file_post_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_post_proto_goTypes = []any{
	(*CheckNoticeResponse)(nil),  // 0: post.CheckNoticeResponse
	(*CheckNoticeRequest)(nil),   // 1: post.CheckNoticeRequest
	(*NoticeFilterRequest)(nil),  // 2: post.NoticeFilterRequest
	(*NoticeInfoResponse)(nil),   // 3: post.NoticeInfoResponse
	(*NoticeListResponse)(nil),   // 4: post.NoticeListResponse
	(*DeleteCommentRequest)(nil), // 5: post.DeleteCommentRequest
	(*CommentListResponse)(nil),  // 6: post.CommentListResponse
	(*CommentInfoResponse)(nil),  // 7: post.CommentInfoResponse
	(*CommentFilterRequest)(nil), // 8: post.CommentFilterRequest
	(*NewCommentResponse)(nil),   // 9: post.NewCommentResponse
	(*NewCommentRequest)(nil),    // 10: post.NewCommentRequest
	(*DeleteFavRequest)(nil),     // 11: post.DeleteFavRequest
	(*FavListRequest)(nil),       // 12: post.FavListRequest
	(*NewFavRequest)(nil),        // 13: post.NewFavRequest
	(*DeleteLikeRequest)(nil),    // 14: post.DeleteLikeRequest
	(*LikeListRequest)(nil),      // 15: post.LikeListRequest
	(*NewLikeResponse)(nil),      // 16: post.NewLikeResponse
	(*NewLikeRequest)(nil),       // 17: post.NewLikeRequest
	(*DeletePostRequest)(nil),    // 18: post.DeletePostRequest
	(*UpdatePostRequest)(nil),    // 19: post.UpdatePostRequest
	(*PostListResponse)(nil),     // 20: post.PostListResponse
	(*PostItemResponse)(nil),     // 21: post.PostItemResponse
	(*PostFilterRequest)(nil),    // 22: post.PostFilterRequest
	(*PostInfoResponse)(nil),     // 23: post.PostInfoResponse
	(*PostID)(nil),               // 24: post.PostID
	(*NewPostResponse)(nil),      // 25: post.NewPostResponse
	(*NewPostRequest)(nil),       // 26: post.NewPostRequest
	(*Empty)(nil),                // 27: post.Empty
}
var file_post_proto_depIdxs = []int32{
	3,  // 0: post.NoticeListResponse.data:type_name -> post.NoticeInfoResponse
	7,  // 1: post.CommentListResponse.data:type_name -> post.CommentInfoResponse
	21, // 2: post.PostListResponse.data:type_name -> post.PostItemResponse
	26, // 3: post.post.NewPost:input_type -> post.NewPostRequest
	24, // 4: post.post.GetPost:input_type -> post.PostID
	22, // 5: post.post.PostList:input_type -> post.PostFilterRequest
	19, // 6: post.post.UpdatePost:input_type -> post.UpdatePostRequest
	18, // 7: post.post.DeletePost:input_type -> post.DeletePostRequest
	17, // 8: post.post.NewLike:input_type -> post.NewLikeRequest
	15, // 9: post.post.PostListByLike:input_type -> post.LikeListRequest
	14, // 10: post.post.DeleteLike:input_type -> post.DeleteLikeRequest
	13, // 11: post.post.NewFav:input_type -> post.NewFavRequest
	12, // 12: post.post.PostListByFav:input_type -> post.FavListRequest
	11, // 13: post.post.DeleteFav:input_type -> post.DeleteFavRequest
	10, // 14: post.post.NewComment:input_type -> post.NewCommentRequest
	8,  // 15: post.post.CommentList:input_type -> post.CommentFilterRequest
	5,  // 16: post.post.DeleteComment:input_type -> post.DeleteCommentRequest
	2,  // 17: post.post.GetNoticeList:input_type -> post.NoticeFilterRequest
	1,  // 18: post.post.CheckNotice:input_type -> post.CheckNoticeRequest
	25, // 19: post.post.NewPost:output_type -> post.NewPostResponse
	23, // 20: post.post.GetPost:output_type -> post.PostInfoResponse
	20, // 21: post.post.PostList:output_type -> post.PostListResponse
	27, // 22: post.post.UpdatePost:output_type -> post.Empty
	27, // 23: post.post.DeletePost:output_type -> post.Empty
	27, // 24: post.post.NewLike:output_type -> post.Empty
	20, // 25: post.post.PostListByLike:output_type -> post.PostListResponse
	27, // 26: post.post.DeleteLike:output_type -> post.Empty
	27, // 27: post.post.NewFav:output_type -> post.Empty
	20, // 28: post.post.PostListByFav:output_type -> post.PostListResponse
	27, // 29: post.post.DeleteFav:output_type -> post.Empty
	9,  // 30: post.post.NewComment:output_type -> post.NewCommentResponse
	6,  // 31: post.post.CommentList:output_type -> post.CommentListResponse
	27, // 32: post.post.DeleteComment:output_type -> post.Empty
	4,  // 33: post.post.GetNoticeList:output_type -> post.NoticeListResponse
	0,  // 34: post.post.CheckNotice:output_type -> post.CheckNoticeResponse
	19, // [19:35] is the sub-list for method output_type
	3,  // [3:19] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_post_proto_init() }
func file_post_proto_init() {
	if File_post_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_post_proto_rawDesc), len(file_post_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_post_proto_goTypes,
		DependencyIndexes: file_post_proto_depIdxs,
		MessageInfos:      file_post_proto_msgTypes,
	}.Build()
	File_post_proto = out.File
	file_post_proto_goTypes = nil
	file_post_proto_depIdxs = nil
}
