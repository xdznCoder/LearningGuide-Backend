// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.28.0
// source: file.proto

package __FileProto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewSummaryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewSummaryResponse) Reset() {
	*x = NewSummaryResponse{}
	mi := &file_file_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewSummaryResponse) ProtoMessage() {}

func (x *NewSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewSummaryResponse.ProtoReflect.Descriptor instead.
func (*NewSummaryResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{0}
}

func (x *NewSummaryResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type NewSummaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CourseID      int32                  `protobuf:"varint,1,opt,name=CourseID,proto3" json:"CourseID,omitempty"`
	ISOWeek       string                 `protobuf:"bytes,2,opt,name=ISOWeek,proto3" json:"ISOWeek,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewSummaryRequest) Reset() {
	*x = NewSummaryRequest{}
	mi := &file_file_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewSummaryRequest) ProtoMessage() {}

func (x *NewSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewSummaryRequest.ProtoReflect.Descriptor instead.
func (*NewSummaryRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{1}
}

func (x *NewSummaryRequest) GetCourseID() int32 {
	if x != nil {
		return x.CourseID
	}
	return 0
}

func (x *NewSummaryRequest) GetISOWeek() string {
	if x != nil {
		return x.ISOWeek
	}
	return ""
}

type SummaryListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Year          string                 `protobuf:"bytes,1,opt,name=Year,proto3" json:"Year,omitempty"`
	CourseId      int32                  `protobuf:"varint,2,opt,name=CourseId,proto3" json:"CourseId,omitempty"`
	PageNum       int32                  `protobuf:"varint,3,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummaryListRequest) Reset() {
	*x = SummaryListRequest{}
	mi := &file_file_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummaryListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryListRequest) ProtoMessage() {}

func (x *SummaryListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryListRequest.ProtoReflect.Descriptor instead.
func (*SummaryListRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{2}
}

func (x *SummaryListRequest) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *SummaryListRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *SummaryListRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *SummaryListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SummaryListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`
	Data          []*SummaryInfoResponse `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummaryListResponse) Reset() {
	*x = SummaryListResponse{}
	mi := &file_file_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummaryListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryListResponse) ProtoMessage() {}

func (x *SummaryListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryListResponse.ProtoReflect.Descriptor instead.
func (*SummaryListResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{3}
}

func (x *SummaryListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SummaryListResponse) GetData() []*SummaryInfoResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetSummaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSummaryRequest) Reset() {
	*x = GetSummaryRequest{}
	mi := &file_file_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSummaryRequest) ProtoMessage() {}

func (x *GetSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetSummaryRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{4}
}

func (x *GetSummaryRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SummaryInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	WeekID        string                 `protobuf:"bytes,2,opt,name=WeekID,proto3" json:"WeekID,omitempty"`
	CourseID      int32                  `protobuf:"varint,3,opt,name=CourseID,proto3" json:"CourseID,omitempty"`
	ExerciseDone  []int32                `protobuf:"varint,4,rep,packed,name=ExerciseDone,proto3" json:"ExerciseDone,omitempty"`
	AccuracyRate  []float32              `protobuf:"fixed32,5,rep,packed,name=AccuracyRate,proto3" json:"AccuracyRate,omitempty"`
	SessionNum    int32                  `protobuf:"varint,6,opt,name=SessionNum,proto3" json:"SessionNum,omitempty"`
	MessageNum    int32                  `protobuf:"varint,7,opt,name=MessageNum,proto3" json:"MessageNum,omitempty"`
	NounNum       int32                  `protobuf:"varint,8,opt,name=NounNum,proto3" json:"NounNum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummaryInfoResponse) Reset() {
	*x = SummaryInfoResponse{}
	mi := &file_file_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummaryInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryInfoResponse) ProtoMessage() {}

func (x *SummaryInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryInfoResponse.ProtoReflect.Descriptor instead.
func (*SummaryInfoResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{5}
}

func (x *SummaryInfoResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SummaryInfoResponse) GetWeekID() string {
	if x != nil {
		return x.WeekID
	}
	return ""
}

func (x *SummaryInfoResponse) GetCourseID() int32 {
	if x != nil {
		return x.CourseID
	}
	return 0
}

func (x *SummaryInfoResponse) GetExerciseDone() []int32 {
	if x != nil {
		return x.ExerciseDone
	}
	return nil
}

func (x *SummaryInfoResponse) GetAccuracyRate() []float32 {
	if x != nil {
		return x.AccuracyRate
	}
	return nil
}

func (x *SummaryInfoResponse) GetSessionNum() int32 {
	if x != nil {
		return x.SessionNum
	}
	return 0
}

func (x *SummaryInfoResponse) GetMessageNum() int32 {
	if x != nil {
		return x.MessageNum
	}
	return 0
}

func (x *SummaryInfoResponse) GetNounNum() int32 {
	if x != nil {
		return x.NounNum
	}
	return 0
}

type DeleteExerciseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteExerciseRequest) Reset() {
	*x = DeleteExerciseRequest{}
	mi := &file_file_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteExerciseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExerciseRequest) ProtoMessage() {}

func (x *DeleteExerciseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExerciseRequest.ProtoReflect.Descriptor instead.
func (*DeleteExerciseRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteExerciseRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ExerciseListResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Total         int32                   `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`
	Data          []*ExerciseInfoResponse `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExerciseListResponse) Reset() {
	*x = ExerciseListResponse{}
	mi := &file_file_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExerciseListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExerciseListResponse) ProtoMessage() {}

func (x *ExerciseListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExerciseListResponse.ProtoReflect.Descriptor instead.
func (*ExerciseListResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{7}
}

func (x *ExerciseListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ExerciseListResponse) GetData() []*ExerciseInfoResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type ExerciseDetailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExerciseDetailRequest) Reset() {
	*x = ExerciseDetailRequest{}
	mi := &file_file_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExerciseDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExerciseDetailRequest) ProtoMessage() {}

func (x *ExerciseDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExerciseDetailRequest.ProtoReflect.Descriptor instead.
func (*ExerciseDetailRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{8}
}

func (x *ExerciseDetailRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ExerciseInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CourseId      int32                  `protobuf:"varint,1,opt,name=CourseId,proto3" json:"CourseId,omitempty"`
	Question      string                 `protobuf:"bytes,2,opt,name=Question,proto3" json:"Question,omitempty"`
	SectionA      string                 `protobuf:"bytes,3,opt,name=SectionA,proto3" json:"SectionA,omitempty"`
	SectionB      string                 `protobuf:"bytes,4,opt,name=SectionB,proto3" json:"SectionB,omitempty"`
	SectionC      string                 `protobuf:"bytes,5,opt,name=SectionC,proto3" json:"SectionC,omitempty"`
	SectionD      string                 `protobuf:"bytes,6,opt,name=SectionD,proto3" json:"SectionD,omitempty"`
	Answer        string                 `protobuf:"bytes,7,opt,name=Answer,proto3" json:"Answer,omitempty"`
	Reason        string                 `protobuf:"bytes,8,opt,name=Reason,proto3" json:"Reason,omitempty"`
	IsRight       string                 `protobuf:"bytes,9,opt,name=IsRight,proto3" json:"IsRight,omitempty"`
	Id            int32                  `protobuf:"varint,10,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExerciseInfoResponse) Reset() {
	*x = ExerciseInfoResponse{}
	mi := &file_file_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExerciseInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExerciseInfoResponse) ProtoMessage() {}

func (x *ExerciseInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExerciseInfoResponse.ProtoReflect.Descriptor instead.
func (*ExerciseInfoResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{9}
}

func (x *ExerciseInfoResponse) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *ExerciseInfoResponse) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *ExerciseInfoResponse) GetSectionA() string {
	if x != nil {
		return x.SectionA
	}
	return ""
}

func (x *ExerciseInfoResponse) GetSectionB() string {
	if x != nil {
		return x.SectionB
	}
	return ""
}

func (x *ExerciseInfoResponse) GetSectionC() string {
	if x != nil {
		return x.SectionC
	}
	return ""
}

func (x *ExerciseInfoResponse) GetSectionD() string {
	if x != nil {
		return x.SectionD
	}
	return ""
}

func (x *ExerciseInfoResponse) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *ExerciseInfoResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ExerciseInfoResponse) GetIsRight() string {
	if x != nil {
		return x.IsRight
	}
	return ""
}

func (x *ExerciseInfoResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ExerciseListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CourseId      int32                  `protobuf:"varint,1,opt,name=CourseId,proto3" json:"CourseId,omitempty"`
	Question      string                 `protobuf:"bytes,2,opt,name=Question,proto3" json:"Question,omitempty"`
	IsRight       string                 `protobuf:"bytes,3,opt,name=IsRight,proto3" json:"IsRight,omitempty"`
	PageNum       int32                  `protobuf:"varint,4,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
	PageSize      int32                  `protobuf:"varint,5,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExerciseListRequest) Reset() {
	*x = ExerciseListRequest{}
	mi := &file_file_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExerciseListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExerciseListRequest) ProtoMessage() {}

func (x *ExerciseListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExerciseListRequest.ProtoReflect.Descriptor instead.
func (*ExerciseListRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{10}
}

func (x *ExerciseListRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *ExerciseListRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *ExerciseListRequest) GetIsRight() string {
	if x != nil {
		return x.IsRight
	}
	return ""
}

func (x *ExerciseListRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ExerciseListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type UpdateExerciseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsRight       string                 `protobuf:"bytes,1,opt,name=IsRight,proto3" json:"IsRight,omitempty"`
	Id            int32                  `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateExerciseRequest) Reset() {
	*x = UpdateExerciseRequest{}
	mi := &file_file_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExerciseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExerciseRequest) ProtoMessage() {}

func (x *UpdateExerciseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExerciseRequest.ProtoReflect.Descriptor instead.
func (*UpdateExerciseRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateExerciseRequest) GetIsRight() string {
	if x != nil {
		return x.IsRight
	}
	return ""
}

func (x *UpdateExerciseRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type NewExerciseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewExerciseResponse) Reset() {
	*x = NewExerciseResponse{}
	mi := &file_file_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewExerciseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewExerciseResponse) ProtoMessage() {}

func (x *NewExerciseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewExerciseResponse.ProtoReflect.Descriptor instead.
func (*NewExerciseResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{12}
}

func (x *NewExerciseResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type NewExerciseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CourseId      int32                  `protobuf:"varint,1,opt,name=CourseId,proto3" json:"CourseId,omitempty"`
	Question      string                 `protobuf:"bytes,2,opt,name=Question,proto3" json:"Question,omitempty"`
	SectionA      string                 `protobuf:"bytes,3,opt,name=SectionA,proto3" json:"SectionA,omitempty"`
	SectionB      string                 `protobuf:"bytes,4,opt,name=SectionB,proto3" json:"SectionB,omitempty"`
	SectionC      string                 `protobuf:"bytes,5,opt,name=SectionC,proto3" json:"SectionC,omitempty"`
	SectionD      string                 `protobuf:"bytes,6,opt,name=SectionD,proto3" json:"SectionD,omitempty"`
	Answer        string                 `protobuf:"bytes,7,opt,name=Answer,proto3" json:"Answer,omitempty"`
	Reason        string                 `protobuf:"bytes,8,opt,name=Reason,proto3" json:"Reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewExerciseRequest) Reset() {
	*x = NewExerciseRequest{}
	mi := &file_file_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewExerciseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewExerciseRequest) ProtoMessage() {}

func (x *NewExerciseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewExerciseRequest.ProtoReflect.Descriptor instead.
func (*NewExerciseRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{13}
}

func (x *NewExerciseRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *NewExerciseRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *NewExerciseRequest) GetSectionA() string {
	if x != nil {
		return x.SectionA
	}
	return ""
}

func (x *NewExerciseRequest) GetSectionB() string {
	if x != nil {
		return x.SectionB
	}
	return ""
}

func (x *NewExerciseRequest) GetSectionC() string {
	if x != nil {
		return x.SectionC
	}
	return ""
}

func (x *NewExerciseRequest) GetSectionD() string {
	if x != nil {
		return x.SectionD
	}
	return ""
}

func (x *NewExerciseRequest) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *NewExerciseRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type NounDetailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NounDetailRequest) Reset() {
	*x = NounDetailRequest{}
	mi := &file_file_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NounDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NounDetailRequest) ProtoMessage() {}

func (x *NounDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NounDetailRequest.ProtoReflect.Descriptor instead.
func (*NounDetailRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{14}
}

func (x *NounDetailRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteNounRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNounRequest) Reset() {
	*x = DeleteNounRequest{}
	mi := &file_file_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNounRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNounRequest) ProtoMessage() {}

func (x *DeleteNounRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNounRequest.ProtoReflect.Descriptor instead.
func (*DeleteNounRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteNounRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateNounRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNounRequest) Reset() {
	*x = UpdateNounRequest{}
	mi := &file_file_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNounRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNounRequest) ProtoMessage() {}

func (x *UpdateNounRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNounRequest.ProtoReflect.Descriptor instead.
func (*UpdateNounRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateNounRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateNounRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type NounListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`
	Data          []*NounInfoResponse    `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NounListResponse) Reset() {
	*x = NounListResponse{}
	mi := &file_file_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NounListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NounListResponse) ProtoMessage() {}

func (x *NounListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NounListResponse.ProtoReflect.Descriptor instead.
func (*NounListResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{17}
}

func (x *NounListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *NounListResponse) GetData() []*NounInfoResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type NounInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	CourseId      int32                  `protobuf:"varint,4,opt,name=CourseId,proto3" json:"CourseId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NounInfoResponse) Reset() {
	*x = NounInfoResponse{}
	mi := &file_file_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NounInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NounInfoResponse) ProtoMessage() {}

func (x *NounInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NounInfoResponse.ProtoReflect.Descriptor instead.
func (*NounInfoResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{18}
}

func (x *NounInfoResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NounInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NounInfoResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NounInfoResponse) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

type NounListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	CourseId      int32                  `protobuf:"varint,2,opt,name=CourseId,proto3" json:"CourseId,omitempty"`
	PageNum       int32                  `protobuf:"varint,3,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NounListRequest) Reset() {
	*x = NounListRequest{}
	mi := &file_file_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NounListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NounListRequest) ProtoMessage() {}

func (x *NounListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NounListRequest.ProtoReflect.Descriptor instead.
func (*NounListRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{19}
}

func (x *NounListRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NounListRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *NounListRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *NounListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type NewNounRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	CourseId      int32                  `protobuf:"varint,3,opt,name=CourseId,proto3" json:"CourseId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewNounRequest) Reset() {
	*x = NewNounRequest{}
	mi := &file_file_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewNounRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewNounRequest) ProtoMessage() {}

func (x *NewNounRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewNounRequest.ProtoReflect.Descriptor instead.
func (*NewNounRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{20}
}

func (x *NewNounRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewNounRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NewNounRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

type NewNounResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewNounResponse) Reset() {
	*x = NewNounResponse{}
	mi := &file_file_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewNounResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewNounResponse) ProtoMessage() {}

func (x *NewNounResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewNounResponse.ProtoReflect.Descriptor instead.
func (*NewNounResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{21}
}

func (x *NewNounResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSessionRequest) Reset() {
	*x = DeleteSessionRequest{}
	mi := &file_file_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSessionRequest) ProtoMessage() {}

func (x *DeleteSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSessionRequest.ProtoReflect.Descriptor instead.
func (*DeleteSessionRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteSessionRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SessionListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`
	Data          []*SessionInfoResponse `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionListResponse) Reset() {
	*x = SessionListResponse{}
	mi := &file_file_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionListResponse) ProtoMessage() {}

func (x *SessionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionListResponse.ProtoReflect.Descriptor instead.
func (*SessionListResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{23}
}

func (x *SessionListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SessionListResponse) GetData() []*SessionInfoResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type SessionInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Uuid          string                 `protobuf:"bytes,2,opt,name=Uuid,proto3" json:"Uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionInfoResponse) Reset() {
	*x = SessionInfoResponse{}
	mi := &file_file_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInfoResponse) ProtoMessage() {}

func (x *SessionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionInfoResponse.ProtoReflect.Descriptor instead.
func (*SessionInfoResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{24}
}

func (x *SessionInfoResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SessionInfoResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type SessionListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CourseId      int32                  `protobuf:"varint,1,opt,name=CourseId,proto3" json:"CourseId,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	PageNum       int32                  `protobuf:"varint,3,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionListRequest) Reset() {
	*x = SessionListRequest{}
	mi := &file_file_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionListRequest) ProtoMessage() {}

func (x *SessionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionListRequest.ProtoReflect.Descriptor instead.
func (*SessionListRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{25}
}

func (x *SessionListRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *SessionListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SessionListRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type MessageListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     int32                  `protobuf:"varint,1,opt,name=SessionId,proto3" json:"SessionId,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	PageNum       int32                  `protobuf:"varint,3,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageListRequest) Reset() {
	*x = MessageListRequest{}
	mi := &file_file_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageListRequest) ProtoMessage() {}

func (x *MessageListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageListRequest.ProtoReflect.Descriptor instead.
func (*MessageListRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{26}
}

func (x *MessageListRequest) GetSessionId() int32 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *MessageListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *MessageListRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type MessageListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`
	Data          []*MessageInfoResponse `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageListResponse) Reset() {
	*x = MessageListResponse{}
	mi := &file_file_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageListResponse) ProtoMessage() {}

func (x *MessageListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageListResponse.ProtoReflect.Descriptor instead.
func (*MessageListResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{27}
}

func (x *MessageListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MessageListResponse) GetData() []*MessageInfoResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type MessageInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	SessionId     int32                  `protobuf:"varint,3,opt,name=SessionId,proto3" json:"SessionId,omitempty"`
	Type          int32                  `protobuf:"varint,4,opt,name=Type,proto3" json:"Type,omitempty"`
	Speaker       string                 `protobuf:"bytes,5,opt,name=Speaker,proto3" json:"Speaker,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageInfoResponse) Reset() {
	*x = MessageInfoResponse{}
	mi := &file_file_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageInfoResponse) ProtoMessage() {}

func (x *MessageInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageInfoResponse.ProtoReflect.Descriptor instead.
func (*MessageInfoResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{28}
}

func (x *MessageInfoResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MessageInfoResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MessageInfoResponse) GetSessionId() int32 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *MessageInfoResponse) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MessageInfoResponse) GetSpeaker() string {
	if x != nil {
		return x.Speaker
	}
	return ""
}

type NewMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewMessageResponse) Reset() {
	*x = NewMessageResponse{}
	mi := &file_file_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMessageResponse) ProtoMessage() {}

func (x *NewMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMessageResponse.ProtoReflect.Descriptor instead.
func (*NewMessageResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{29}
}

func (x *NewMessageResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type NewMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	Type          int32                  `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`
	SessionId     int32                  `protobuf:"varint,3,opt,name=SessionId,proto3" json:"SessionId,omitempty"`
	Speaker       string                 `protobuf:"bytes,4,opt,name=Speaker,proto3" json:"Speaker,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewMessageRequest) Reset() {
	*x = NewMessageRequest{}
	mi := &file_file_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMessageRequest) ProtoMessage() {}

func (x *NewMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMessageRequest.ProtoReflect.Descriptor instead.
func (*NewMessageRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{30}
}

func (x *NewMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NewMessageRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NewMessageRequest) GetSessionId() int32 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *NewMessageRequest) GetSpeaker() string {
	if x != nil {
		return x.Speaker
	}
	return ""
}

type CreateSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CourseId      int32                  `protobuf:"varint,1,opt,name=CourseId,proto3" json:"CourseId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSessionRequest) Reset() {
	*x = CreateSessionRequest{}
	mi := &file_file_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionRequest) ProtoMessage() {}

func (x *CreateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateSessionRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{31}
}

func (x *CreateSessionRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

type CreateSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSessionResponse) Reset() {
	*x = CreateSessionResponse{}
	mi := &file_file_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionResponse) ProtoMessage() {}

func (x *CreateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionResponse.ProtoReflect.Descriptor instead.
func (*CreateSessionResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{32}
}

func (x *CreateSessionResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_file_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{33}
}

type UpdateFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Desc          string                 `protobuf:"bytes,2,opt,name=Desc,proto3" json:"Desc,omitempty"`
	MindMap       string                 `protobuf:"bytes,3,opt,name=MindMap,proto3" json:"MindMap,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFileRequest) Reset() {
	*x = UpdateFileRequest{}
	mi := &file_file_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFileRequest) ProtoMessage() {}

func (x *UpdateFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFileRequest.ProtoReflect.Descriptor instead.
func (*UpdateFileRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateFileRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateFileRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *UpdateFileRequest) GetMindMap() string {
	if x != nil {
		return x.MindMap
	}
	return ""
}

type DeleteFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileRequest) Reset() {
	*x = DeleteFileRequest{}
	mi := &file_file_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileRequest) ProtoMessage() {}

func (x *DeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{35}
}

func (x *DeleteFileRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=FileName,proto3" json:"FileName,omitempty"`
	FileType      string                 `protobuf:"bytes,2,opt,name=FileType,proto3" json:"FileType,omitempty"`
	FileSize      int64                  `protobuf:"varint,3,opt,name=FileSize,proto3" json:"FileSize,omitempty"`
	OssUrl        string                 `protobuf:"bytes,4,opt,name=OssUrl,proto3" json:"OssUrl,omitempty"`
	Desc          string                 `protobuf:"bytes,5,opt,name=Desc,proto3" json:"Desc,omitempty"`
	UserId        int32                  `protobuf:"varint,6,opt,name=UserId,proto3" json:"UserId,omitempty"`
	CourseId      int32                  `protobuf:"varint,7,opt,name=CourseId,proto3" json:"CourseId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFileRequest) Reset() {
	*x = CreateFileRequest{}
	mi := &file_file_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileRequest) ProtoMessage() {}

func (x *CreateFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileRequest.ProtoReflect.Descriptor instead.
func (*CreateFileRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{36}
}

func (x *CreateFileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *CreateFileRequest) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *CreateFileRequest) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *CreateFileRequest) GetOssUrl() string {
	if x != nil {
		return x.OssUrl
	}
	return ""
}

func (x *CreateFileRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CreateFileRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateFileRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

type CreateFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFileResponse) Reset() {
	*x = CreateFileResponse{}
	mi := &file_file_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileResponse) ProtoMessage() {}

func (x *CreateFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileResponse.ProtoReflect.Descriptor instead.
func (*CreateFileResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{37}
}

func (x *CreateFileResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FileDetailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileDetailRequest) Reset() {
	*x = FileDetailRequest{}
	mi := &file_file_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDetailRequest) ProtoMessage() {}

func (x *FileDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDetailRequest.ProtoReflect.Descriptor instead.
func (*FileDetailRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{38}
}

func (x *FileDetailRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FileInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	FileName      string                 `protobuf:"bytes,2,opt,name=FileName,proto3" json:"FileName,omitempty"`
	FileType      string                 `protobuf:"bytes,3,opt,name=FileType,proto3" json:"FileType,omitempty"`
	FileSize      int64                  `protobuf:"varint,4,opt,name=FileSize,proto3" json:"FileSize,omitempty"`
	OssUrl        string                 `protobuf:"bytes,5,opt,name=OssUrl,proto3" json:"OssUrl,omitempty"`
	Desc          string                 `protobuf:"bytes,6,opt,name=Desc,proto3" json:"Desc,omitempty"`
	UserId        int32                  `protobuf:"varint,7,opt,name=UserId,proto3" json:"UserId,omitempty"`
	CourseId      int32                  `protobuf:"varint,8,opt,name=CourseId,proto3" json:"CourseId,omitempty"`
	MindMap       string                 `protobuf:"bytes,9,opt,name=MindMap,proto3" json:"MindMap,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfoResponse) Reset() {
	*x = FileInfoResponse{}
	mi := &file_file_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfoResponse) ProtoMessage() {}

func (x *FileInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfoResponse.ProtoReflect.Descriptor instead.
func (*FileInfoResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{39}
}

func (x *FileInfoResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileInfoResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileInfoResponse) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *FileInfoResponse) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileInfoResponse) GetOssUrl() string {
	if x != nil {
		return x.OssUrl
	}
	return ""
}

func (x *FileInfoResponse) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *FileInfoResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FileInfoResponse) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *FileInfoResponse) GetMindMap() string {
	if x != nil {
		return x.MindMap
	}
	return ""
}

type FileFilterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=FileName,proto3" json:"FileName,omitempty"`
	FileType      string                 `protobuf:"bytes,2,opt,name=FileType,proto3" json:"FileType,omitempty"`
	UserId        int32                  `protobuf:"varint,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PageNum       int32                  `protobuf:"varint,4,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
	PageSize      int32                  `protobuf:"varint,5,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	CourseId      int32                  `protobuf:"varint,6,opt,name=CourseId,proto3" json:"CourseId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileFilterRequest) Reset() {
	*x = FileFilterRequest{}
	mi := &file_file_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileFilterRequest) ProtoMessage() {}

func (x *FileFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileFilterRequest.ProtoReflect.Descriptor instead.
func (*FileFilterRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{40}
}

func (x *FileFilterRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileFilterRequest) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *FileFilterRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FileFilterRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *FileFilterRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FileFilterRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

type FileListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`
	Data          []*FileInfoResponse    `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileListResponse) Reset() {
	*x = FileListResponse{}
	mi := &file_file_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileListResponse) ProtoMessage() {}

func (x *FileListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileListResponse.ProtoReflect.Descriptor instead.
func (*FileListResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{41}
}

func (x *FileListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FileListResponse) GetData() []*FileInfoResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_file_proto protoreflect.FileDescriptor

var file_file_proto_rawDesc = string([]byte{
	0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x4e, 0x65, 0x77, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x11, 0x4e, 0x65, 0x77, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x53, 0x4f,
	0x57, 0x65, 0x65, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x49, 0x53, 0x4f, 0x57,
	0x65, 0x65, 0x6b, 0x22, 0x7a, 0x0a, 0x12, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x59, 0x65, 0x61,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x5a, 0x0a, 0x13, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x23, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64,
	0x22, 0xfb, 0x01, 0x0a, 0x13, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x65, 0x65, 0x6b,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x57, 0x65, 0x65, 0x6b, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c,
	0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x44, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0c, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x44, 0x6f, 0x6e, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0c, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e,
	0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x6f, 0x75, 0x6e, 0x4e, 0x75, 0x6d, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x4e, 0x6f, 0x75, 0x6e, 0x4e, 0x75, 0x6d, 0x22, 0x27,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x14, 0x45, 0x78, 0x65, 0x72, 0x63,
	0x69, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x72, 0x63,
	0x69, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x27, 0x0a, 0x15, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x98,
	0x02, 0x0a, 0x14, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x12, 0x1a, 0x0a, 0x08, 0x53,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x49, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x49, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x13, 0x45, 0x78,
	0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x52,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x49, 0x73, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x41, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x49, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x13,
	0x4e, 0x65, 0x77, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x49, 0x64, 0x22, 0xec, 0x01, 0x0a, 0x12, 0x4e, 0x65, 0x77, 0x45, 0x78, 0x65, 0x72, 0x63,
	0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x12, 0x1a,
	0x0a, 0x08, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0x23, 0x0a, 0x11, 0x4e, 0x6f, 0x75, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4e, 0x6f, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x54, 0x0a, 0x10, 0x4e,
	0x6f, 0x75, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x75, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x6c, 0x0a, 0x10, 0x4e, 0x6f, 0x75, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x22,
	0x77, 0x0a, 0x0f, 0x4e, 0x6f, 0x75, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x5a, 0x0a, 0x0e, 0x4e, 0x65, 0x77, 0x4e,
	0x6f, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x49, 0x64, 0x22, 0x21, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x4e, 0x6f, 0x75, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22,
	0x5a, 0x0a, 0x13, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x39, 0x0a, 0x13, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x55, 0x75, 0x69, 0x64, 0x22, 0x66, 0x0a, 0x12, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x68,
	0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x5a, 0x0a, 0x13, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x8b, 0x01, 0x0a, 0x13, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x70, 0x65, 0x61,
	0x6b, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x70, 0x65, 0x61, 0x6b,
	0x65, 0x72, 0x22, 0x24, 0x0a, 0x12, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x11, 0x4e, 0x65, 0x77, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x70, 0x65,
	0x61, 0x6b, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x70, 0x65, 0x61,
	0x6b, 0x65, 0x72, 0x22, 0x32, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64,
	0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x51, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x70, 0x22, 0x23, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x64, 0x22, 0xc7, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4f,
	0x73, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x73, 0x73,
	0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x22, 0x24, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x64, 0x22, 0x23, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0xf0, 0x01, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x4f, 0x73, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x4f, 0x73, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x4d, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x4d, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x70, 0x22, 0xb5, 0x01, 0x0a, 0x11, 0x46, 0x69,
	0x6c, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x64, 0x22, 0x54, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xfc, 0x0a, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x3f, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x17,
	0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x17, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x17, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x17,
	0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x17, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x18, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x3f, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17,
	0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4e,
	0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x18, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x4e, 0x6f, 0x75, 0x6e,
	0x12, 0x14, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x4e, 0x6f, 0x75, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4e, 0x65,
	0x77, 0x4e, 0x6f, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a,
	0x08, 0x4e, 0x6f, 0x75, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x4e, 0x6f, 0x75, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x75, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x75, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x2e, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x4e, 0x6f, 0x75, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x75, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x75, 0x6e, 0x12, 0x17, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0b, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x42,
	0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x12, 0x18, 0x2e,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4e,
	0x65, 0x77, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x72,
	0x63, 0x69, 0x73, 0x65, 0x12, 0x1b, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0b, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x45,
	0x0a, 0x0c, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19,
	0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x72,
	0x63, 0x69, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x45,
	0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x65,
	0x72, 0x63, 0x69, 0x73, 0x65, 0x12, 0x1b, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x3f, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x17, 0x2e,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4e, 0x65,
	0x77, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x0b, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x18, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x17, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_file_proto_rawDescOnce sync.Once
	file_file_proto_rawDescData []byte
)

func file_file_proto_rawDescGZIP() []byte {
	file_file_proto_rawDescOnce.Do(func() {
		file_file_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_file_proto_rawDesc), len(file_file_proto_rawDesc)))
	})
	return file_file_proto_rawDescData
}

var file_file_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_file_proto_goTypes = []any{
	(*NewSummaryResponse)(nil),    // 0: file.NewSummaryResponse
	(*NewSummaryRequest)(nil),     // 1: file.NewSummaryRequest
	(*SummaryListRequest)(nil),    // 2: file.SummaryListRequest
	(*SummaryListResponse)(nil),   // 3: file.SummaryListResponse
	(*GetSummaryRequest)(nil),     // 4: file.GetSummaryRequest
	(*SummaryInfoResponse)(nil),   // 5: file.SummaryInfoResponse
	(*DeleteExerciseRequest)(nil), // 6: file.DeleteExerciseRequest
	(*ExerciseListResponse)(nil),  // 7: file.ExerciseListResponse
	(*ExerciseDetailRequest)(nil), // 8: file.ExerciseDetailRequest
	(*ExerciseInfoResponse)(nil),  // 9: file.ExerciseInfoResponse
	(*ExerciseListRequest)(nil),   // 10: file.ExerciseListRequest
	(*UpdateExerciseRequest)(nil), // 11: file.UpdateExerciseRequest
	(*NewExerciseResponse)(nil),   // 12: file.NewExerciseResponse
	(*NewExerciseRequest)(nil),    // 13: file.NewExerciseRequest
	(*NounDetailRequest)(nil),     // 14: file.NounDetailRequest
	(*DeleteNounRequest)(nil),     // 15: file.DeleteNounRequest
	(*UpdateNounRequest)(nil),     // 16: file.UpdateNounRequest
	(*NounListResponse)(nil),      // 17: file.NounListResponse
	(*NounInfoResponse)(nil),      // 18: file.NounInfoResponse
	(*NounListRequest)(nil),       // 19: file.NounListRequest
	(*NewNounRequest)(nil),        // 20: file.NewNounRequest
	(*NewNounResponse)(nil),       // 21: file.NewNounResponse
	(*DeleteSessionRequest)(nil),  // 22: file.DeleteSessionRequest
	(*SessionListResponse)(nil),   // 23: file.SessionListResponse
	(*SessionInfoResponse)(nil),   // 24: file.SessionInfoResponse
	(*SessionListRequest)(nil),    // 25: file.SessionListRequest
	(*MessageListRequest)(nil),    // 26: file.MessageListRequest
	(*MessageListResponse)(nil),   // 27: file.MessageListResponse
	(*MessageInfoResponse)(nil),   // 28: file.MessageInfoResponse
	(*NewMessageResponse)(nil),    // 29: file.NewMessageResponse
	(*NewMessageRequest)(nil),     // 30: file.NewMessageRequest
	(*CreateSessionRequest)(nil),  // 31: file.CreateSessionRequest
	(*CreateSessionResponse)(nil), // 32: file.CreateSessionResponse
	(*Empty)(nil),                 // 33: file.Empty
	(*UpdateFileRequest)(nil),     // 34: file.UpdateFileRequest
	(*DeleteFileRequest)(nil),     // 35: file.DeleteFileRequest
	(*CreateFileRequest)(nil),     // 36: file.CreateFileRequest
	(*CreateFileResponse)(nil),    // 37: file.CreateFileResponse
	(*FileDetailRequest)(nil),     // 38: file.FileDetailRequest
	(*FileInfoResponse)(nil),      // 39: file.FileInfoResponse
	(*FileFilterRequest)(nil),     // 40: file.FileFilterRequest
	(*FileListResponse)(nil),      // 41: file.FileListResponse
}
var file_file_proto_depIdxs = []int32{
	5,  // 0: file.SummaryListResponse.data:type_name -> file.SummaryInfoResponse
	9,  // 1: file.ExerciseListResponse.data:type_name -> file.ExerciseInfoResponse
	18, // 2: file.NounListResponse.data:type_name -> file.NounInfoResponse
	24, // 3: file.SessionListResponse.data:type_name -> file.SessionInfoResponse
	28, // 4: file.MessageListResponse.data:type_name -> file.MessageInfoResponse
	39, // 5: file.FileListResponse.data:type_name -> file.FileInfoResponse
	36, // 6: file.file.CreateFile:input_type -> file.CreateFileRequest
	38, // 7: file.file.GetFileDetail:input_type -> file.FileDetailRequest
	40, // 8: file.file.FileList:input_type -> file.FileFilterRequest
	34, // 9: file.file.UpdateFile:input_type -> file.UpdateFileRequest
	35, // 10: file.file.DeleteFile:input_type -> file.DeleteFileRequest
	31, // 11: file.file.CreateSession:input_type -> file.CreateSessionRequest
	25, // 12: file.file.SessionList:input_type -> file.SessionListRequest
	22, // 13: file.file.DeleteSession:input_type -> file.DeleteSessionRequest
	30, // 14: file.file.NewMessage:input_type -> file.NewMessageRequest
	26, // 15: file.file.MessageList:input_type -> file.MessageListRequest
	20, // 16: file.file.NewNoun:input_type -> file.NewNounRequest
	19, // 17: file.file.NounList:input_type -> file.NounListRequest
	14, // 18: file.file.GetNounDetail:input_type -> file.NounDetailRequest
	15, // 19: file.file.DeleteNoun:input_type -> file.DeleteNounRequest
	13, // 20: file.file.NewExercise:input_type -> file.NewExerciseRequest
	11, // 21: file.file.UpdateExercise:input_type -> file.UpdateExerciseRequest
	10, // 22: file.file.ExerciseList:input_type -> file.ExerciseListRequest
	8,  // 23: file.file.GetExerciseDetail:input_type -> file.ExerciseDetailRequest
	6,  // 24: file.file.DeleteExercise:input_type -> file.DeleteExerciseRequest
	1,  // 25: file.file.NewSummary:input_type -> file.NewSummaryRequest
	2,  // 26: file.file.SummaryList:input_type -> file.SummaryListRequest
	4,  // 27: file.file.GetSummary:input_type -> file.GetSummaryRequest
	37, // 28: file.file.CreateFile:output_type -> file.CreateFileResponse
	39, // 29: file.file.GetFileDetail:output_type -> file.FileInfoResponse
	41, // 30: file.file.FileList:output_type -> file.FileListResponse
	33, // 31: file.file.UpdateFile:output_type -> file.Empty
	33, // 32: file.file.DeleteFile:output_type -> file.Empty
	32, // 33: file.file.CreateSession:output_type -> file.CreateSessionResponse
	23, // 34: file.file.SessionList:output_type -> file.SessionListResponse
	33, // 35: file.file.DeleteSession:output_type -> file.Empty
	29, // 36: file.file.NewMessage:output_type -> file.NewMessageResponse
	27, // 37: file.file.MessageList:output_type -> file.MessageListResponse
	21, // 38: file.file.NewNoun:output_type -> file.NewNounResponse
	17, // 39: file.file.NounList:output_type -> file.NounListResponse
	18, // 40: file.file.GetNounDetail:output_type -> file.NounInfoResponse
	33, // 41: file.file.DeleteNoun:output_type -> file.Empty
	12, // 42: file.file.NewExercise:output_type -> file.NewExerciseResponse
	33, // 43: file.file.UpdateExercise:output_type -> file.Empty
	7,  // 44: file.file.ExerciseList:output_type -> file.ExerciseListResponse
	9,  // 45: file.file.GetExerciseDetail:output_type -> file.ExerciseInfoResponse
	33, // 46: file.file.DeleteExercise:output_type -> file.Empty
	0,  // 47: file.file.NewSummary:output_type -> file.NewSummaryResponse
	3,  // 48: file.file.SummaryList:output_type -> file.SummaryListResponse
	5,  // 49: file.file.GetSummary:output_type -> file.SummaryInfoResponse
	28, // [28:50] is the sub-list for method output_type
	6,  // [6:28] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_file_proto_init() }
func file_file_proto_init() {
	if File_file_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_file_proto_rawDesc), len(file_file_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_proto_goTypes,
		DependencyIndexes: file_file_proto_depIdxs,
		MessageInfos:      file_file_proto_msgTypes,
	}.Build()
	File_file_proto = out.File
	file_file_proto_goTypes = nil
	file_file_proto_depIdxs = nil
}
