// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: chat.proto

package server

import (
	"context"

	"LearningGuide/chat_srv/.ChatProto"
	"LearningGuide/chat_srv/internal/logic"
	"LearningGuide/chat_srv/internal/svc"
)

type ChatServer struct {
	svcCtx *svc.ServiceContext
	__ChatProto.UnimplementedChatServer
}

func NewChatServer(svcCtx *svc.ServiceContext) *ChatServer {
	return &ChatServer{
		svcCtx: svcCtx,
	}
}

func (s *ChatServer) UploadDocument(ctx context.Context, in *__ChatProto.CourseDocument) (*__ChatProto.Empty, error) {
	l := logic.NewUploadDocumentLogic(ctx, s.svcCtx)
	return l.UploadDocument(in)
}

func (s *ChatServer) SendSyncMessage(ctx context.Context, in *__ChatProto.UserMessage) (*__ChatProto.ChatModelResponse, error) {
	l := logic.NewSendSyncMessageLogic(ctx, s.svcCtx)
	return l.SendSyncMessage(in)
}

func (s *ChatServer) SendStreamMessage(in *__ChatProto.UserMessage, stream __ChatProto.Chat_SendStreamMessageServer) error {
	l := logic.NewSendStreamMessageLogic(stream.Context(), s.svcCtx)
	return l.SendStreamMessage(in, stream)
}
